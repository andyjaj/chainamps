MATRIXOBJ = dense_interface.o dense_matrix_functions.o sparse_interface.o arpack_interface.o

MPXOBJ = UnitCell.o FiniteMPS.o MPS_matrix.o MPO_matrix.o MPX_matrix.o MPXIndex.o states.o $(MATRIXOBJ)

MEASOBJ =  measurement.o

DMRGOBJ = DMRG_routines.o $(MEASOBJ)

TEBDOBJ = TEBD_routines.o $(MEASOBJ)

TWOVEOBJ = TwoVertexEvolution.o $(TEBDOBJ)

MATRIXDEPS = sparse_interface.hpp dense_interface.hpp arpack_interface.hpp dense_matrix_functions.hpp common_defs.hpp

MPXDEPS = MPX_matrix.hpp MPXIndex.hpp states.hpp $(MATRIXDEPS)

MPODEPS = MPO_matrix.hpp $(MPXDEPS)

MPSDEPS = MPS_matrix.hpp $(MPXDEPS)

UNITCELLDEPS = UnitCell.hpp $(MPSDEPS)

FMPSDEPS = FiniteMPS.hpp $(MPSDEPS)

ALLMPXDEPS = MPX.hpp $(UNITCELLDEPS) $(FMPSDEPS) $(MPODEPS) 

MODELDEPS = command_line_input.hpp model.hpp make_model.hpp vertex.hpp vertex_generators/*.hpp vertex_generators/ll/*.hpp $(ALLMPXDEPS)

DMRGDEPS =  DMRG_routines.hpp data.hpp measurement.hpp $(MODELDEPS)

TEBDDEPS =  TEBD_routines.hpp data.hpp measurement.hpp $(MODELDEPS)

TWOVEDEPS = TwoVertexEvolution.hpp TEBD_routines.hpp data.hpp measurement.hpp $(MODELDEPS)

DYNDEPS = $(TEBDDEPS) 

.PHONY: all

all: DMRG TIME MEAS TWOVE DYNDEPS

DMRG: iDMRG_DRV.bin fDMRG_DRV.bin

TIME: iTEBD_DRV.bin TEBD_DRV.bin

MEAS: STORE_MODEL.bin UNITCELL_MEASURE.bin FINITE_MEASURE.bin TEBD_DYN_MEASURE.bin

TWOVE: 2VE_DRV.bin

iDMRG_DRV.bin: iDMRG_DRV.o $(DMRGOBJ) $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

fDMRG_DRV.bin: fDMRG_DRV.o $(DMRGOBJ) $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

iTEBD_DRV.bin: iTEBD_DRV.o $(TEBDOBJ) $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

TEBD_DRV.bin: TEBD_DRV.o $(TEBDOBJ) $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

STORE_MODEL.bin: STORE_MODEL.o $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

UNITCELL_MEASURE.bin: UNITCELL_MEASURE.o $(MPXOBJ) $(MEASOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

FINITE_MEASURE.bin: FINITE_MEASURE.o $(TEBDOBJ) $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

TEBD_DYN_MEASURE.bin: TEBD_DYN_MEASURE.o $(TEBDOBJ) $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

2VE_DRV.bin: 2VE_DRV.o $(TWOVEOBJ) $(TEBDOBJ) $(MPXOBJ)
	$(CC) -o $@ $^ $(CFLAGS) $(LIBS)

iDMRG_DRV.o: iDMRG_DRV.cpp $(DMRGDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

fDMRG_DRV.o: fDMRG_DRV.cpp $(DMRGDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

iTEBD_DRV.o: iTEBD_DRV.cpp $(TEBDDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

TEBD_DRV.o: TEBD_DRV.cpp $(TEBDDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

UNITCELL_MEASURE.o: UNITCELL_MEASURE.cpp measurement.hpp $(MODELDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

FINITE_MEASURE.o: FINITE_MEASURE.cpp $(TEBDDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

STORE_MODEL.o: STORE_MODEL.cpp $(MODELDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

TEBD_DYN_MEASURE.o: TEBD_DYN_MEASURE.cpp $(DYN_DEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

2VE_DRV.o: 2VE_DRV.cpp $(TWOVEDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

DMRG_routines.o: DMRG_routines.cpp DMRG_routines.hpp $(ALLMPXDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

TEBD_routines.o: TEBD_routines.cpp TEBD_routines.hpp $(ALLMPXDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

measurement.o: measurement.cpp measurement.hpp $(ALLMPXDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

TwoVertexEvolution.o:  TwoVertexEvolution.cpp TwoVertexEvolution.hpp TEBD_routines.hpp $(ALLMPXDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

UnitCell.o: UnitCell.cpp $(UNITCELLDEPS) 
	$(CC) -c -o $@ $< $(CFLAGS)

FiniteMPS.o: FiniteMPS.cpp $(FMPSDEPS) 
	$(CC) -c -o $@ $< $(CFLAGS)

MPS_matrix.o: MPS_matrix.cpp $(MPSDEPS) 
	$(CC) -c -o $@ $< $(CFLAGS)

MPO_matrix.o: MPO_matrix.cpp $(MPODEPS) 
	$(CC) -c -o $@ $< $(CFLAGS)

MPX_matrix.o: MPX_matrix.cpp $(MPXDEPS) 
	$(CC) -c -o $@ $< $(CFLAGS)

MPXIndex.o: MPXIndex.cpp $(MATRIXDEPS) 
	$(CC) -c -o $@ $< $(CFLAGS)

sparse_interface.o: sparse_interface.cpp $(MATRIXDEPS)
	$(CC) -c -o $@ $< $(CFLAGS)

dense_interface.o: dense_interface.cpp dense_interface.hpp dense_matrix_functions.hpp common_defs.hpp
	$(CC) -c -o $@ $< $(CFLAGS)

arpack_interface.o: arpack_interface.cpp arpack_interface.hpp dense_matrix_functions.hpp
	$(CC) -c -o $@ $< $(CFLAGS)

dense_matrix_functions.o: dense_matrix_functions.cpp dense_matrix_functions.hpp
	$(CC) -c -o $@ $< $(CFLAGS)

states.o: states.cpp states.hpp common_defs.hpp
	$(CC) -c -o $@ $< $(CFLAGS)

.PHONY: clean

clean:
	 rm *.o *.bin

.PHONY: purge

purge:
	 rm *.o *.bin *.BLOCK *matrix
